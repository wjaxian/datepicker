var Components = require('../components.json')
var fs = require('fs');
var render = require('json-templater/string')
var uppercamelcase = require('uppercamelcase')
var path = require('path')
var endOfLine = require('os').EOL

var OUTPUT_PATH = path.join(__dirname, '../src/index.js')
var IMPORT_TEMPLATE = 'import {{name}} from \'../packages/{{package}}/index.js\''
var MAIN_TEMPLATE = `/* Automatically generated by './build/build-entry.js' */
{{include}}
import localeIndex from './locale'
const components = [
  {{name}}
]

const install = function(Vue, opts = {}) {
  localeIndex.use(opts.locale)
  localeIndex.i18n(opts.i18n)

  components.forEach(function(component) {
    Vue.component(component.name, component);
  })
}

if (typeof window !== 'undefined' && window.Vue) {
  install(window.Vue)
}

const version = '{{version}}',
locale = localeIndex.use,
i18n = localeIndex.i18n

export {
  version,
  locale,
  i18n,
  install,
  {{name}},
  {{list}}
}

export default {
  version: '{{version}}',
  locale: localeIndex.use,
  i18n: localeIndex.i18n,
  install,
  {{name}},
  {{list}}
}
`

var ComponentNames = Object.keys(Components)

var includeComponentTemplate = []
var installTemplate = []
var listTemplate = []
var componentNames = []

ComponentNames.forEach(name => {
  var componentName = uppercamelcase(name)
  componentNames.push(componentName)
  includeComponentTemplate.push(render(IMPORT_TEMPLATE, {
    name: componentName,
    package: name
  }))
})

var template = render(MAIN_TEMPLATE, {
  include: includeComponentTemplate.join(endOfLine),
  install: installTemplate.join(',' + endOfLine),
  version: require('../package.json').version,
  list: listTemplate.join(',' + endOfLine),
  name: componentNames.join(',' + endOfLine)
})

fs.writeFileSync(OUTPUT_PATH, template)